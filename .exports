#!/usr/bin/env bash

#source ~/workspaces/dotfiles-1/.exports

# Remove ones I don't use/want
#unset tre;

export HISTCONTROL=ignoreboth
export PROMPT_COMMAND="history -a"
export HISTSIZE=100000
export HISTFILESIZE=100000
#export HISTTIMEFORMAT="%Y/%m/%d %H:%M:%S:   "
export EDITOR=vim

export CLICOLOR=1
export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx

export MAVEN_OPTS=-Xmx512m

if [[ "$OSTYPE" == "linux-gnu"* ]]; then
  :
elif [[ "$OSTYPE" == "darwin"* ]]; then
  export LIQUIBASE_HOME=/usr/local/opt/liquibase/libexec
  export PATH=$PATH:$HOME/tools/toggl-cli
  export PATH=$PATH:$HOME/tools/terraform_0.6.16_darwin_amd64
  export PATH=$PATH:$HOME/bin
  export PATH=$PATH:$HOME/tools/apache-maven-3.5.0/bin
  export GRADLE_HOME=$HOME/tools/gradle-5.2.1
  export GROOVY_HOME=$HOME/tools/groovy-2.4.12

  export FLUTTER_HOME=$HOME/tools/flutter_macos_1.22.2-stable

  # gnubin is for gnu packages (like gnu-sed/gsed)
  export PATH=/usr/local/opt/grep/libexec/gnubin:/usr/local/opt/gnu-sed/libexec/gnubin:$PATH:/usr/local/sbin
  export PATH=$PATH:$FLUTTER_HOME/bin
  export JAVA_HOME=`/usr/libexec/java_home -v11.0.1`
  # per https://github.com/pstadler/keybase-gpg-github
  # Avoid issues with `gpg` as installed via Homebrew.
  # https://stackoverflow.com/a/42265848/96656
  export GPG_TTY=$(tty)

elif [[ "$OSTYPE" == "cygwin" ]]; then
  # POSIX compatibility layer and Linux environment emulation for Windows
  :
elif [[ "$OSTYPE" == "msys" ]]; then
  # Lightweight shell and GNU utilities compiled for Windows (part of MinGW)
  :
elif [[ "$OSTYPE" == "win32" ]]; then
  # I'm not sure this can happen.
  :
elif [[ "$OSTYPE" == "freebsd"* ]]; then
  # ...
  :
else
  # Unknown.
  :
fi

export PATH=$PATH:$GRADLE_HOME/bin:$GROOVY_HOME/bin

# From https://gist.github.com/textarcana/4611277
export LESSOPEN="| /usr/local/bin/src-hilite-lesspipe.sh %s"
# From https://gist.github.com/karolyi/ad020e676e989678d16e
#export LESSOPEN='| /usr/local/etc/source-highlight-esc.sh %s'

export LESS=" -R -M --shift 5 -S "
#export LESS=-FMRXis

export PATH="$HOME/bin:$PATH";

# WSL 2 specific settings
if grep -q "microsoft" /proc/version &>/dev/null; then
  :
fi

# WSL 1 specific settings
if grep -q "(Microsoft|WSL)" /proc/version &>/dev/null; then
  if [ "$(umask)" = "0000" ]; then
    umask 0022
  fi
fi
