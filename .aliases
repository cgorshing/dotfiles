#!/usr/bin/env bash

#source ~/workspaces/dotfiles-1/.aliases

# Remove ones I don't use/want
#unset tre;

alias path='echo $PATH | tr -s ":" "\n"'

alias df='df -h'
alias du='du -h'
alias ls='ls -h'
alias grep='grep --color'                     # show differences in colour
alias egrep='egrep --color=auto'              # show differences in colour
alias fgrep='fgrep --color=auto'              # show differences in colour

alias ll='ls -l'                              # long list
alias la='ls -A'                              # all but . and ..
alias l='ls -CF'                              #

set -o vi

alias cdw='cd ~/workspaces'
alias cdm='cd ~/workspaces/mule'
alias cde='cd ~/workspaces/elixir'
alias cdp='cd ~/workspaces/phoenix'
alias cdt='cd ~/tools'
alias gemspec='vi *.gemspec'

alias lsr='ls -lrt'
alias depAnalyze='mvn dependency:analyze'
alias depTree='mvn dependency:tree > depTree'
alias surefire-grep='grep -H "Tests run" target/surefire-reports/*.txt | grep FAILURE'
alias fails='vi target/surefire-reports/munit.*'

alias mcp='mvn clean package'
alias mct='mvn clean test'
alias incrementVersion='mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-SNAPSHOT versions:commit'

alias skipTests='mvn clean package -DskipTests'
alias skipJustMunitTests='mvn clean package -DskipMunitTests'
alias how-runTests='echo mvn clean test -Dmunit.test=.*my-test.*#.*test-scenario-1.*'
alias how-oneTest='echo mvn clean test -Dmunit.test=.*my-test.*#.*test-scenario-1.*'
alias how-singleTest='echo mvn clean test -Dmunit.test=.*my-test.*#.*test-scenario-1.*'
alias how-remove-quarantine='echo xattr -r -d com.apple.quarantine *'
alias how-checkout-remote-branch='echo git checkout --track origin/feature/daves_branch'
alias how-git-list-tags="git for-each-ref --format='%(if)%(committerdate)%(then)%(committerdate)%(else)%(*committerdate)%(end) %(refname:lstrip=2)' refs/tags/*"
alias how-pandoc="echo pandoc test1.md -s -o test1.pdf"

alias how-restore-postgres='psql -d gens_dev -f gens-db-20180131-2043.bkup'

alias make-test-jar='mvn clean org.apache.maven.plugins:maven-jar-plugin:test-jar'

alias how-start-splunk='/Applications/Splunk/bin/splunk start'
alias start-splunk='/Applications/Splunk/bin/splunk start'

alias test-ping='ping 8.8.8.8'

alias how-gitDeleteCommit='echo git reset --hard HEAD^ '

alias directorySize='du -hcs '

alias grep="grep --binary-files=without-match --color=auto --devices=skip --exclude-dir=CVS --exclude-dir=.libs --exclude-dir=.deps --exclude-dir=.svn"

alias how-ssh-get-pub-from-private='ssh-keygen -y -f ~/.ssh/id_rsa'

alias grd='./gradlew'
alias g='git status'
alias gpr='git pull --rebase'
alias gphm='git push heroku master'

alias ga='git add '
#alias gb='git branch '
alias gc='git commit'
alias gd='git diff'
alias gk='gitk --all&'
alias gx='gitx --all'

alias got='git '
alias get='git '
alias igt='git '

alias gt='./gradlew tasks'
alias gb='./gradlew build'

#Open files with:
#$ ij foo
alias ij='open -b com.jetbrains.intellij'
alias sl='/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl'
alias sublime='/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl'

alias dls='docker container ls'

alias jenkins-stop='sudo launchctl unload /Library/LaunchDaemons/org.jenkins-ci.plist'
alias jenkins-start='sudo launchctl load /Library/LaunchDaemons/org.jenkins-ci.plist'

alias java8="export JAVA_HOME=`/usr/libexec/java_home -v1.8*`"
alias java9="export JAVA_HOME=`/usr/libexec/java_home -v 9*`"
alias java11="export JAVA_HOME=`/usr/libexec/java_home -v 11*`"

alias please='sudo $(fc -ln -1)'
